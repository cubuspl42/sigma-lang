%val bleedingResult = {
    bleedingHands = %true,
}

%val calmResult = {
    purringCat = %true,
}

%class Cat {
    %constructor of ^{
        name: String,
        hasSharpClaws: Bool,
    }

    %fun pet ^{} => %when (
        %case this.hasSharpClaws => bleedingResult
        %else => calmResult
    )
}

%val tailWavingResult = {
    wavingTail = %true,
}

%class Dog {
    %constructor of ^{
        name: String,
        hasSharpTeeth: Bool,
    }

    %fun pet ^{} => tailWavingResult
}

%fun foo ^{arg1: Type1} => %false

%val bar = foo{arg2 = value1}

%val value1 = {
    x4 = {},
    x5 = {
        b = %true,
    },
}

%val value2 = {
    b1 = %false,
    b2 = %true,
    x3 = {},
}

%val pussy = Cat.of{
    hasSharpClaws = %false,
}

%val rex = Dog.of{
}

%val isA = builtin.isA

%val main = {
    isPussyCat = pussy %is_a Cat,
    isPussyDog = pussy %is_a Dog,
    isRexCat = rex %is_a Cat,
    isRexDog = rex %is_a Dog,
}
